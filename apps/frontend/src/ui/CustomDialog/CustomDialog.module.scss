/* reset */
button,
fieldset,
input {
  all: unset;
}

.DialogOverlay {
  background-color: rgba($primary-color, 0.5);
  position: fixed;
  inset: 0;
  animation: overlayShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}

.DialogContent {
  background-color: $bg-color;
  border-radius: 6px;
  box-shadow: 0 10px 40px rgba($primary-color, 0.25);
  position: fixed;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 90vw;
  max-width: 500px;
  max-height: 85vh;
  padding: 25px;
  animation: contentShow 150ms cubic-bezier(0.16, 1, 0.3, 1);
}
.DialogContent:focus {
  outline: none;
}

.DialogTitle {
  margin: 0;
  font-weight: 500;
  color: $text-color;
  font-size: 17px;
}

.DialogDescription {
  margin: 10px 0 20px;
  color: $primary-color;
  font-size: 15px;
  line-height: 1.5;
}

.IconButton {
  all: unset;
  font-family: inherit;
  border-radius: 100%;
  height: 25px;
  width: 25px;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  color: $primary-color;
  position: absolute;
  top: 10px;
  right: 10px;
  background-color: $secondary-bg-color;
  cursor: pointer;
}
.IconButton:hover {
  background-color: lightly-darken($secondary-bg-color);
}
.IconButton:focus {
  box-shadow: 0 0 0 2px lightly-lighten($accent-color);
}

.Fieldset {
  display: flex;
  gap: 20px;
  align-items: center;
  margin-bottom: 15px;

  &.reduceMarginBottom {
    margin-bottom: 5px;
  }
}

.Label {
  font-size: 15px;
  color: $primary-color;
  min-width: 90px;
  width: 90px;
  text-align: right;
}

.InputWrapper {
  width: 100%;
  min-width: 35px;
  flex: 1;
  display: flex;
  flex-direction: column;
}

.Input {
  align-items: center;
  justify-content: center;
  border-radius: 4px;
  padding: 0 10px;
  font-size: 15px;
  line-height: 1;
  color: $primary-color;
  background-color: $bg-color;
  box-shadow: 0 0 0 1px $accent-color;
  height: 35px;
  background-color: white;
}
.Input:focus {
  box-shadow: 0 0 0 2px lightly-lighten($accent-color);
}

.Input.InputError {
  box-shadow: 0 0 0 1px #ff4444;
}

.Input.InputError:focus {
  box-shadow: 0 0 0 2px rgba(255, 68, 68, 0.6);
}

.ErrorMessage {
  color: #ff4444;
  font-size: 12px;
  margin-top: 4px;
}

@keyframes overlayShow {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes contentShow {
  from {
    opacity: 0;
    transform: translate(-50%, -48%) scale(0.96);
  }
  to {
    opacity: 1;
    transform: translate(-50%, -50%) scale(1);
  }
}
